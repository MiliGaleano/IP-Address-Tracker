{"version":3,"sources":["components/map.js","assets/pattern-bg.png","components/header.js","components/ipCard.js","services/geoApi.js","components/loading.js","components/home.js","App.js","index.js"],"names":["Map","actualData","position","lat","lng","console","log","className","MapContainer","center","zoom","scrollWheelZoom","style","height","width","TileLayer","attribution","url","Marker","icon","Icon","iconUrl","markerIconPng","iconSize","iconAnchor","Popup","newip","city","country","Header","handleIp","handleChange","backgroundImage","bg","type","onChange","placeholder","onClick","e","preventDefault","IpCard","postalCode","timezone","domainsip","GetIp","ip","fetch","apiurl","then","res","json","response","location","isp","catch","err","Loading","Home","useState","loading","setLoading","setIp","inputIP","setInputIP","setActualData","useEffect","newIp","alert","target","value","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4a0dd45.chunk.js","sourcesContent":["import React from 'react'\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\"\r\nimport {Icon} from 'leaflet'\r\nimport './styles.css'\r\n\r\nconst Map = ({actualData}) => {\r\n\r\n    const position = [actualData.lat, actualData.lng]\r\n    console.log(position)\r\n\r\n    return(\r\n        <div className='divMap'>\r\n            <MapContainer \r\n            center={position}\r\n            zoom={12} \r\n            scrollWheelZoom={false}\r\n            style={{ height: \"67vh\", width: \"100vw\" }}\r\n            >\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n                <Marker position={position} icon={new Icon({iconUrl: markerIconPng, iconSize: [25, 41], iconAnchor: [12, 41]})} className='marker'>\r\n                    <Popup>\r\n                        {actualData.newip} <br /> {`${actualData.city}, ${actualData.country}`}\r\n                    </Popup>\r\n                </Marker>\r\n            </MapContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map","export default __webpack_public_path__ + \"static/media/pattern-bg.a60a3c85.png\";","import React from 'react'\r\nimport bg from '../assets/pattern-bg.png'\r\nimport './styles.css'\r\n\r\nconst Header = ({handleIp, handleChange}) => {\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        handleIp()\r\n    }\r\n\r\n    return(\r\n        <div className='divHeader' style={{backgroundImage: `url(${bg})`}}>\r\n            <h1 className='h1header'>IP Address Tracker</h1>\r\n            <form className='divInput'>\r\n                <input type='text' onChange={handleChange} className='inputHeader' placeholder='Search for any IP address or domain'/>\r\n                <button className='buttonHeader' onClick={handleClick} >{'>'}</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './styles.css'\r\n\r\nconst IpCard = ({actualData}) => {\r\n\r\n    let {newip,city,country,postalCode, timezone, domainsip} = actualData\r\n    return(\r\n        <div className='divIpCard'>\r\n            <div className='divSectionCard firstdiv'>\r\n                <h2 className='h2Card'>IP ADDRESS</h2>\r\n                <h1 className='h1Card'>{newip}</h1>\r\n            </div><hr/>\r\n            <div className='divSectionCard'>\r\n                <h2 className='h2Card'>LOCATION</h2>\r\n                <h1 className='h1Card'>{`${city}, ${country} ${postalCode}`}</h1>\r\n            </div><hr/>\r\n            <div className='divSectionCard'>\r\n                <h2 className='h2Card'>TIMEZONE</h2>\r\n                <h1 className='h1Card'>{timezone}</h1>\r\n            </div><hr/>\r\n            <div className='divSectionCard noBorder'>\r\n                <h2 className='h2Card'>ISP</h2>\r\n                <h1 className='h1Card'>{domainsip}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IpCard","    let apiKey='at_pl4aycT5BcNAUnM27H5xBQjqcUHAl'\r\n    let apiurl= \"https://geo.ipify.org/api/v1?\"\r\n\r\n    const url = apiurl + 'apiKey=' + apiKey + '&domain='\r\n\r\n    const GetIp = (ip) => {\r\n        return fetch(url+ip)\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            console.log(response)\r\n            let newIp = {\r\n                newip: response.ip,\r\n                city: response.location.city,\r\n                country: response.location.country,\r\n                postalCode: response.location.postalCode,\r\n                timezone: response.location.timezone,\r\n                lat: response.location.lat,\r\n                lng: response.location.lng,\r\n                domainsip: response.isp\r\n            }\r\n            return newIp\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            return 'error'\r\n        })\r\n    }\r\n\r\n    export default GetIp\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Loading = () => {\r\n    return(\r\n        <div className='divloading'>\r\n            <div className='loading'></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import React, {useEffect, useState} from 'react'\r\nimport Map from './map'\r\nimport Header from './header'\r\nimport IpCard from './ipCard'\r\nimport GetIp from '../services/geoApi'\r\nimport Loading from './loading'\r\n\r\nfunction Home() {\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [ip, setIp] = useState('')\r\n    const [inputIP, setInputIP] = useState('')\r\n    const [actualData, setActualData] = useState({\r\n                                        newip:'',\r\n                                        city:'',\r\n                                        country:'',\r\n                                        postalCode:'',\r\n                                        timezone:'',\r\n                                        domainsip:'',\r\n                                        lat:'',\r\n                                        lng:''\r\n                                        })\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        GetIp(ip)\r\n        .then((newIp) => {\r\n            if (newIp === 'error') {\r\n                alert('Wrong search, please try again!')\r\n            } else {\r\n                let {newip,city,country,postalCode, timezone, domainsip, lat, lng} = newIp\r\n                setActualData({\r\n                    newip:newip,\r\n                    city:city,\r\n                    country:country,\r\n                    postalCode:postalCode,\r\n                    timezone:timezone,\r\n                    domainsip:domainsip,\r\n                    lat:lat,\r\n                    lng:lng\r\n                })\r\n            }\r\n        }).then(()=> setLoading(false))\r\n    }, [ip])\r\n\r\n    const handleIp = () => {\r\n        setIp(inputIP)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setInputIP(e.target.value)\r\n        console.log(inputIP)\r\n    }\r\n\r\n    if (loading === false) {\r\n        return (\r\n                <div>\r\n                    <Header handleIp={handleIp} handleChange={handleChange} />\r\n                    <Map actualData={actualData} />\r\n                    <IpCard actualData={actualData} />\r\n                </div>\r\n        )\r\n    } else {\r\n        return <Loading></Loading>\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import './App.css'\nimport Home from './components/home'\n\nfunction App() {\n  return (\n    <Home/>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}